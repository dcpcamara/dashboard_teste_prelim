plot_grafico_artigo_macro_por_uf <- function(df, UF, palette) {
  # 1) filtra só a UF desejada
  df_uf <- df |> filter(uf == UF)
  regs <- sort(unique(df_uf$macroregional))
  n_regs <- length(regs)
  if(n_regs == 0) stop("Nenhuma macrorregião encontrada para ", UF)
  
  # 2) pré-aloca lista de plots (sem título individual!)
  plots <- vector("list", n_regs)
  for (j in seq_along(regs)) {
    reg_j <- regs[j]
    df_reg <- df_uf |> filter(macroregional == reg_j)
    
    quants <- rev(unique(df_reg$quantile))
    colors <- palette[seq_along(quants)]
    max_valor <- df_reg |>
      filter(is.finite(maxvalues)) |>
      summarise(m = max(maxvalues, cases, na.rm = TRUE)) |>
      pull(m)
    df_max_rnd2 <- ceiling(max_valor / 50) * 50 * 1.1
    
    df2 <- df_reg |>
      mutate(maxvalues = ifelse(is.infinite(maxvalues), df_max_rnd2, maxvalues))
    
    # monta o mini-gráfico, mas sem layout$title
    fig_i <- plot_ly()
    for (i in seq_along(quants)) {
      fig_i <- fig_i |> add_trace(
        data = df2 |> filter(quantile == quants[i]),
        type = 'scatter',
        mode = 'lines',
        x = ~date,
        y = ~maxvalues,
        fill = 'tozeroy',
        line = list(color = colors[i]),
        fillcolor = colors[i],
        name = quants[i],
        hovertemplate = paste0("<b>", quants[i],"</b>: %{y:,.0f}<extra></extra>")
      )
    }
    fig_i <- fig_i |>
      add_trace(
        data = df2,
        type = 'scatter',
        mode = 'lines',
        x = ~date,
        y = ~cases,
        line = list(color = "black"),
        name = "Cases",
        hovertemplate = "<b>Cases</b>: %{y:,.0f}<extra></extra>"
      ) |>
      layout(
        margin = list(t = 20, b = 20, l = 20, r = 20),
        xaxis = list(showgrid = FALSE, zeroline = FALSE, title = NULL),
        yaxis = list(showgrid = FALSE, zeroline = FALSE, title = NULL),
        showlegend = FALSE
      )
    
    plots[[j]] <- fig_i
  }
  
  # 3) define grid
  ncol <- ceiling(sqrt(n_regs))
  nrow <- ceiling(n_regs / ncol)
  
  # 4) combina subplots
  p <- subplot(
    plotlist = plots,
    nrows = nrow,
    margin = 0.02,
    shareX = TRUE,
    # shareY = TRUE,
    titleX = FALSE,
    titleY = FALSE
  )
  
  # 5) cria annotations para cada célula
  title_hd <- vector("list", n_regs)
  for (i in seq_along(regs)) {
    coli <- (i-1) %% ncol
    rowi <- floor((i-1) / ncol)
    x0 <- coli / ncol
    x1 <- (coli+1) / ncol
    xc <- (x0 + x1) / 2
    y1 <- 1 - rowi / nrow
    # coloca o texto logo acima do topo da célula
    title_hd[[i]] <- list(
      x = xc, 
      y = y1 - 0.01,
      xref = "paper", 
      yref = "paper",
      text = regs[i],
      showarrow= FALSE,
      xanchor = "center",
      yanchor = "bottom",
      font = list(size = 12)
    )
  }
  
  # 6) retorna o gráfico com as annotations
  p |> layout(
    hovermode = "x unified",
    annotations = title_hd
  )
}

plot_grafico_artigo_macro_por_uf(t1hd, "SP", pal2)
